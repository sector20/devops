
# File location and type
file_location = "/FileStore/tables/googleplaystore.csv"
file_type = "csv"

# CSV options
infer_schema = "false"
first_row_is_header = "true"
delimiter = ","

# The applied options are for CSV files. For other file types, these will be ignored.
df = spark.read.format(file_type) \
  .option("inferSchema", infer_schema) \
  .option("header", first_row_is_header) \
  .option("sep", delimiter) \
  .load(file_location)

display(df)

# COMMAND ----------

# Create a view or table

temp_table_name = "googleplaystore_csv"

df.createOrReplaceTempView(temp_table_name)

# COMMAND ----------

# MAGIC %sql
# MAGIC 
# MAGIC /* Query the created temp table in a SQL cell */
# MAGIC 
# MAGIC select * from `googleplaystore_csv`

# COMMAND ----------

from pyspark.sql.functions import regexp_replace

#df2=df.replace('one','1')
#display(df2)
#df2.select('Content Rating').show(1000)
#df.replace('+','').show(200)
#df3=df.withColumn('Content Rating', regexp_replace('Content Rating', "10+", '+'))
#df2 = df.select("Content Rating",regexp_replace("Content Rating", "[\+]", ""))
df2=regexp_replace("Content Rating", "[\+]", "")
df2.show(100)

# COMMAND ----------

import re

from pyspark.sql.functions import avg, col, udf
def convert(name):
    name = name.replace(' ', '')
    #s1 = re.sub('(.)([A-Z][a-z]+)', r'\1_\2', name)
    return re.sub('(.)([A-Z][a-z]+)', r'\1_\2', name)
    #return re.sub('([a-z0-9])([A-Z])', r'\1_\2', s1).lower()


df = df.select([col(column).alias(convert(column)) for column in df.columns])
display(df)

# COMMAND ----------

# With this registered as a temp view, it will only be available to this particular notebook. If you'd like other users to be able to query this table, you can also create a table from the DataFrame.
# Once saved, this table will persist across cluster restarts as well as allow various users across different notebooks to query this data.
# To do so, choose your table name and uncomment the bottom line.

permanent_table_name = "googleplaystoreparquet"

df.write.format("parquet").saveAsTable(permanent_table_name)

# COMMAND ----------

select * from 'googleplaystoreparquet'

# COMMAND ----------

df = spark.read.table('googleplaystoreparquet')

display(df)

# COMMAND ----------

from pyspark.sql.functions import sum
#display(df.select('category','rating').groupBy('category'))
#df.select('category','rating').where(df.Rating != 'NaN').groupBy('category').agg(avg('rating')).show()
#df.select('category','rating').where(df.Rating != 'NaN').groupBy('category').agg(avg('Rating').cast('integer')).show()
#display(df.select('category','rating').where(df.Rating != 'NaN').groupBy('category').agg(avg('Rating').cast('integer')))
display(df.select('category','rating').where(df.Rating != 'NaN').groupBy('category').agg(sum('Rating')))
#df2=df.select('category','rating').where(df.Rating != 'NaN')


# COMMAND ----------

from pyspark.sql.functions import sum
display(df2.groupBy('category').agg(sum('Rating')))
